# cat <<__SCRIPTS__ >/dev/null
# ^ this lets us embed shell scripts after the __SCRIPTS__ tag

## options:
# enable mouse mode
set -g mouse on

# set automatic titles
set -g set-titles on

# use hostname as title string
set -g set-titles-string "#H"

# avoid escape delay
set -s escape-time 0

# increase scrollback buffer size
set -g history-limit 50000

# display tmux messages for 4 seconds
set -g display-time 4000

# refresh 'status-left' and 'status-right' more often
set -g status-interval 5

# upgrade $TERM
set -g default-terminal "tmux-256color"
set -sa terminal-overrides ",*:Tc"

# sync tmux buffer with terminal clipboard
set -g set-clipboard on

# enable focus events (for terminals that support them)
set -g focus-events on

# set vim key bindings in tmux command prompt (prefix-:)
set -g status-keys vi

# activate aggressive resize to smallest client
# super useful when using grouped sessions and multi-monitor setup
setw -g aggressive-resize on

# renumber windows
set -g renumber-windows on

# indicate window activity in status bar
setw -g monitor-activity on
# indicate window activity as tmux message
#set -g visual-activity on

# start window indexing at one instead of zero
set -g base-index 1

# update vital ENV variables on reattach
set -g update-environment "TERM SSH_CONNECTION SSH_TTY SSH_ASKPASS SSH_AGENT_PID SSH_AUTH_SOCK DISPLAY WINDOWID XAUTHORITY"

## key-bindings:
# unbind default tmux prefix key (vim already uses ctrl-b)
# bind screen prefix key (ctrl-a)
# bind "a" to also send prefix
# super useful for nested tmux sessions over ssh
unbind "C-b"
unbind "C-a"
set -g prefix "C-a"
bind "C-a" send-prefix
bind "a" send-prefix

# split windows like vim (keep cwd)
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind "s" split-window -v -c "#{pane_current_path}"
bind "v" split-window -h -c "#{pane_current_path}"

# move around panes with "hjkl", as one would do in vim after pressing ctrl-w
bind "h" select-pane -L
bind "j" select-pane -D
bind "k" select-pane -U
bind "l" select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by
# only one at a time can be slow
bind -r "<" resize-pane -L 1
bind -r ">" resize-pane -R 1
bind -r "-" resize-pane -D 1
bind -r "+" resize-pane -U 1

# use "c" to create new window (keep cwd)
bind "c" new-window -c "#{pane_current_path}"

# use "C" to create new session (keep cwd)
bind "C" new-session -c "#{pane_current_path}"

# switch '"' over to selecting windows
unbind '"'
bind '"' choose-window

# use "'" to switch between sessions
bind "'" choose-session

# join pane from the specified window/pane with "prefix+ctrl+j"
# move pane to the specified window/pane with "prefix+ctrl+m"
# notation is: window.pane_id
# display pane_id's with prefix+q
bind "q" display-panes
bind "C-j" command-prompt -p "Join pane from (w.p):" "join-pane -s '%%'"
bind "C-m" command-prompt -p "Move pane to (w.p):" "join-pane -t '%%'"

# confirm before killing window, session or the server
bind "x" confirm kill-window
bind "C-x" confirm kill-session
bind "X" confirm kill-server

# use vim keybindings in copy mode
setw -g mode-keys vi
#bind -T copy-mode-vi "v" send-keys -X begin-selection
#bind -T copy-mode-vi "y" send-keys -X copy-selection-and-cancel

# activate copy mode on mouse scroll
bind -n WheelUpPane \
    if -Ft= "#{?pane_in_mode,1,#{mouse_button_flag}}" \
        "send-keys -M" \
        "if-shell -Ft= '#{alternate_on}' \
            'send-keys Up Up Up' \
            'copy-mode'"

bind -n WheelDownPane \
    if -Ft= "#{?pane_in_mode,1,#{mouse_button_flag}}" \
        "send-keys -M" \
        "send-keys Down Down Down"

# use "R" to set correct terminal size
# super useful when connected over serial
bind "R" run "echo \"stty columns $(tmux display -p \#{pane_width}); stty rows $(tmux display -p \#{pane_height})\" | tmux load-buffer - ; tmux paste-buffer"

# run embedded shell scripts
run "cut -c3- ~/.tmux.conf | '$SHELL' -s set_appearance"

##appearance:
# calculate accent colour from hostname
# set accent colour to different display elements
# colors that won't look good are: 0, 16-21, 52, 232-244

# __SCRIPTS__
#
# set_appearance() {
#     local accent_colour=$(calc_accent_colour)
#
#     tmux set -g status-bg colour$accent_colour
#     tmux set -g message-command-style fg=black,bg=colour$accent_colour
#     tmux set -g message-style fg=black,bg=colour$accent_colour
#     tmux set -g mode-style fg=black,bg=colour$accent_colour
#     tmux set -g pane-active-border-style fg=colour$accent_colour,bg=black,bold
# }
#
# calc_accent_colour() {
#     local hash=$(hostname)
#     while :; do
#         hash=$(hash_string $hash)
#	  if ! (( hash == 0 || (16 <= hash && hash <= 21) || hash == 52 || (232 <= hash && hash <= 244) )); then
#         	break;
#         fi
#     done
#     echo $hash
# }
#
# hash_string() {
#     hash_value=$(printf "%s" "$1" | md5sum | sed -e 's/[^[:alnum:]]\+//g' | tr "a-f" "A-F")
#     if [ "x" != "x$2" ]
#     then
#         v2="+ $2"
#     fi
#     echo "$(((0x$hash_value $v2) % 255))" | tr -d "-"
# }
#
# $1
